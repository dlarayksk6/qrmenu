@model List<qrmenu.Models.Product>
@{
    var categories = ViewBag.Categories as List<qrmenu.Models.Category>;
    int? selectedCategoryId = ViewBag.SelectedCategoryId;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container py-4">
    <h2>Menü Önizleme</h2>

  
    <div class="d-flex overflow-auto gap-3 my-3">
        @foreach (var cat in categories)
        {
            <div class="text-center">
                <a asp-action="Index" asp-route-categoryId="@cat.Id"
                   style="text-decoration: none; color: inherit;">
                    <div class="card @(cat.Id == selectedCategoryId ? "border-primary" : "") shadow-sm"
                         style="width: 80px; height: 80px;">
                        @if (!string.IsNullOrEmpty(cat.ImageUrl))
                        {
                            <img src="@cat.ImageUrl"
                                 style="width: 100%; height: 100%; object-fit: cover; border-radius: 6px;" />
                        }
                    </div>
                    <div style="width: 80px; font-size: 0.75rem; margin-top: 4px;">
                        <strong>@cat.Name</strong>
                    </div>
                </a>
            </div>
        }
    </div>

    @if (!Model.Any())
    {
        <p class="text-muted">Bu kategoriye ait ürün bulunmamaktadır.</p>
    }
    else
    {
        <div class="row" id="product-list">
            @foreach (var item in Model.OrderBy(p => p.DisplayOrder))
            {
                <div class="col-12 col-md-6 col-lg-4 mb-4 product-item" data-id="@item.Id">
                    <div class="card h-100 shadow-sm @(item.IsActive ? "" : "bg-light text-muted")">
                        @if (!string.IsNullOrEmpty(item.ImageUrl))
                        {
                            <img src="@item.ImageUrl" class="card-img-top"
                                 style="height: 180px; object-fit: cover;" />
                        }
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@item.Name</h5>

                            @if (!item.IsActive)
                            {
                                <div class="text-danger small mt-1">Şu anda mevcut değil</div>
                            }

                            <p class="card-text">@item.Description</p>

                            <div class="mt-auto d-flex justify-content-between align-items-center">
                                <span class="fs-5 text-success">@item.Price ₺</span>
                            
                                <div class="btn-group btn-group-sm ms-2" role="group">
                                    <button type="button" class="btn btn-outline-secondary move-up">↑</button>
                                    <button type="button" class="btn btn-outline-secondary move-down">↓</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        function saveOrder() {
            const items = Array.from(document.querySelectorAll("#product-list .product-item"))
                .map((x, i) => ({ id: x.dataset.id, order: i }));

            fetch('/Preview/UpdateOrder', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(items)
            });
        }

        document.addEventListener("DOMContentLoaded", function() {
            const container = document.getElementById("product-list");

            container.addEventListener("click", function(e) {
                const btn = e.target;
                if (btn.classList.contains("move-up") || btn.classList.contains("move-down")) {
                    const item = btn.closest(".product-item");

                    if (btn.classList.contains("move-up")) {
                        const prev = item.previousElementSibling;
                        if (prev) container.insertBefore(item, prev);
                    }

                    if (btn.classList.contains("move-down")) {
                        const next = item.nextElementSibling;
                        if (next) container.insertBefore(next, item);
                    }

                   
                    saveOrder();
                }
            });
        });
    </script>
}
